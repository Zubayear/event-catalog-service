{
  "swagger": "2.0",
  "info": {
    "title": "EventCatalog.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "EventCatalog"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "operationId": "EventCatalog_GetAllCategories",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogGetAllCategoriesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EventCatalog"
        ]
      },
      "post": {
        "operationId": "EventCatalog_CreateCategory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogCreateCategoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "UNKNOWN",
              "CONCERTS",
              "MUSICALS",
              "PLAYS"
            ],
            "default": "UNKNOWN"
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      }
    },
    "/api/event-catalogs": {
      "get": {
        "operationId": "EventCatalog_GetAllEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogGetAllEventsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "EventCatalog"
        ]
      },
      "post": {
        "operationId": "EventCatalog_CreateEventWithCategory",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogCreateEventWithCategoryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventCatalogCreateEventWithCategoryRequest"
            }
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      },
      "put": {
        "operationId": "EventCatalog_UpdateEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogUpdateEventByEventIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "eventId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "price",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "float"
          },
          {
            "name": "artist",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "imageUrl",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      }
    },
    "/api/event-catalogs/fields": {
      "get": {
        "operationId": "EventCatalog_GetEventByField",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogGetEventByFieldResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      }
    },
    "/api/event-catalogs/{id}": {
      "get": {
        "operationId": "EventCatalog_GetEventById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogGetEventByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      },
      "delete": {
        "operationId": "EventCatalog_DeleteEventById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/EventCatalogDeleteEventByIdResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "EventCatalog"
        ]
      }
    }
  },
  "definitions": {
    "EventCatalogCategory": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "CONCERTS",
        "MUSICALS",
        "PLAYS"
      ],
      "default": "UNKNOWN"
    },
    "EventCatalogCreateCategoryResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        }
      }
    },
    "EventCatalogCreateEventWithCategoryRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "artist": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "categoryId": {
          "type": "string"
        }
      }
    },
    "EventCatalogCreateEventWithCategoryResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/EventCatalogEvent"
        }
      }
    },
    "EventCatalogDeleteEventByIdResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "EventCatalogEvent": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "float"
        },
        "artist": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "imageUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "EventCatalogGetAllCategoriesResponse": {
      "type": "object",
      "properties": {
        "categories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventCatalogGetAllEventsResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventCatalogEvent"
          }
        }
      }
    },
    "EventCatalogGetEventByFieldResponse": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventCatalogEvent"
          }
        }
      }
    },
    "EventCatalogGetEventByIdResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/EventCatalogEvent"
        }
      }
    },
    "EventCatalogUpdateEventByEventIdResponse": {
      "type": "object",
      "properties": {
        "event": {
          "$ref": "#/definitions/EventCatalogEvent"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
